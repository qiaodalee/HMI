<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="/css/index.css">
    <title>Home</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
</head>
<script>
    // 1000 milliseconds = 1 second
    const interval = 20000;
    var chart;
    var solarData = {};

    function getSolarData() {
        $.get('../api/getSolarData', function (res) {
            document.getElementById('totalPowerGeneration').innerHTML = parseInt(res['totalPowerGeneration']) + ' kwh';
            document.getElementById('monthGeneration').innerHTML = parseInt(res['monthGeneration']) + ' kwh';
            document.getElementById('dayGeneration').innerHTML = parseInt(res['dayGeneration']) + ' kwh';
            document.getElementById('currentGeneration').innerHTML = parseInt(res['currentGeneration']) + ' kwh';

            document.getElementById('systemEfficiency').innerHTML = parseInt(res['systemEfficiency']) + ' %';
            document.getElementById('co2Reduction').innerHTML = parseInt(res['co2Reduction']) + ' kg';
            document.getElementById('todayPowerUsed').innerHTML = parseInt(res['todayPowerUsed']) + ' kwh';
            document.getElementById('nameplateCapacity').innerHTML = parseInt(res['nameplateCapacity']) + ' kwh';
        });
    }

    function getSolarHistoryDatas() {
        return new Promise((resolve, reject) => {
            $.get('../api/getSolarHistoryDatas', function (res) {
                resolve(res);
            });
        })

    }

    function updateChart() {
        getSolarHistoryDatas()
            .then(recv => {
                const currDate = new Date();
                let chartData = recv['datas'].slice(-(25*60));
                solarData = recv['datas'];
                chart.data.labels = [];
                chart.data.datasets[0].data = [];

                let minuteGeneration = 0;
                for ( let index = 0; index < chartData.length; index++){
                    if ( new Date(chartData[index]['timestamp']).getMinutes() == 0){
                        chartData = chartData.slice(index, index+(24*60));
                        break;
                    }
                }

                // console.log(chartData); 

                chartData.forEach(data => {
                    minuteGeneration += data['powerGeneration'];
                    if ( new Date(data['timestamp']).getMinutes() == 59){
                    // console.log(new Date(data['timestamp']).getHours());
                    // console.log(minuteGeneration);
                        chart.data.labels.push(new Date(data['timestamp']).getHours());
                        chart.data.datasets[0].data.push(minuteGeneration);
                        minuteGeneration = 0;
                    }
                })

                // Object.keys(chartData).forEach((minutes) => {

                //     let minuteGeneration = 0;
                //     Object.keys(chartData[minutes]).forEach((data) => {
                //         minuteGeneration += chartData[minutes][data]['powerGeneration'];
                //     })
                //     chart.data.datasets[0].data.push((minuteGeneration / 60));
                //     // console.log(minuteGeneration);
                // })


                chart.update();

                time = new Date(recv['timestamp']);
                timeStr = `${time.getFullYear()}-${time.getMonth() + 1}-${time.getDate()} ${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}`

                document.getElementById('timestamp').innerHTML = `系統啟動於 2023-01-01 08:00:00<br>`;
                document.getElementById('timestamp').innerHTML += `目前時間: ${timeStr}`;
            })

    }

    function inputDate(promptStr){
        let dateInput = prompt(promptStr);
        if ( !dateInput.length){
            dateInput = "2024-01-01";
        }

        if (dateInput) {
            const datePattern = /^\d{4}-\d{2}-\d{2}$/;
            // console.log(datePattern.test(dateInput));
            if (datePattern.test(dateInput)) {
                const date = new Date(dateInput);
                // console.log(date);
                if (!isNaN(date)) {
                    return date;
                } else {
                    alert('Invalid date. Please check your input.');
                    return inputDate();
                }
            } else {
                alert('Invalid format. Please use YYYY-MM-DD.');
                return inputDate();
            }
        }

        return dateInput;
    } 

    $(document).ready(
        () => {
            const ctx = document.getElementById('chart_canvas').getContext('2d');
            chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [1],
                    datasets: [
                        {
                            label: ['solar generation'],
                            data: [0],
                            backgroundColor: [
                                'rgba(30,30,30,0.7)'
                            ],
                            borderColor: [
                                'rgba(30,30,30,0.7)'
                            ]
                        }
                    ]
                },
                options: {
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            getSolarData();
            updateChart();
            setInterval(getSolarData, interval);
            setInterval(updateChart, interval);

            document.getElementById('exportButton').addEventListener('click', function () {
                // Sample data to export

                const startDate = inputDate("輸入開始日期 (YYYY-MM-DD):");
                const endDate = inputDate("輸入結束日期 (YYYY-MM-DD):");

                const data = [];
                let exportData = {
                    timestamp: startDate,
                    co2Reduction: 0,
                    powerGeneration: 0,
                    powerUsed: 0,
                    nameplateCapacity: 0
                };

                // console.log(solarData)

                solarData.forEach(date => {
                    const timestamp = new Date(date['timestamp']);

                    if ( timestamp >= startDate && timestamp <= endDate){
                        if ( exportData['timestamp'].getHours() != timestamp.getHours()){
                            data.push(date);
                            exportData = {
                                timestamp: timestamp,
                                co2Reduction: 0,
                                powerGeneration: 0,
                                powerUsed: 0,
                                nameplateCapacity: 0
                            };
                        }

                        exportData['co2Reduction'] += date['co2Reduction'];
                        exportData['powerGeneration'] += date['powerGeneration'];
                        exportData['powerUsed'] += date['powerUsed'];
                        exportData['nameplateCapacity'] += date['nameplateCapacity'];
                    }
                    else if ( timestamp > endDate){
                        return;
                    }
                })
                // console.log(data)

                const worksheet = XLSX.utils.json_to_sheet(data);
                const workbook = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");

                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });

                const blob = new Blob([excelBuffer], { type: 'application/octet-stream' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'exported_data.xlsx';  // File name
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                document.body.removeChild(a);

            })
    });
</script>

<body>
    <!-- Top navigation -->
    <header>
        <div class="logo">
            <img src="./img/logo.png" alt="Logo">
            <h1>太陽能SCADA</h1>
        </div>
    </header>

    <!-- Main content -->
    <div class="content">
        <aside class="sidebar">
            <ul>
                <li onclick="window.location.href='./index'">首頁</li>
                <li onclick="window.location.href='./mail'">警報郵件</li>
                <li onclick="window.location.href='./battery'">電池資訊</li>
                <li onclick="window.location.href='./log'">日誌</li>
                <li onclick="window.location.href='./design'">架構圖</li>
                <!-- <li>Menu 4</li> -->
            </ul>
        </aside>

        <main>
            <!-- Summary Info -->
            <p id="timestamp"></p>
            <section class="summary">
                <div class="box">
                    <h2 id="totalPowerGeneration"></h2>
                    <p>總發電量</p>
                </div>
                <div class="box">
                    <h2 id="monthGeneration"></h2>
                    <p>月發電量</p>
                </div>
                <div class="box">
                    <h2 id="dayGeneration"></h2>
                    <p>日發電量</p>
                </div>
                <div class="box">
                    <h2 id="currentGeneration"></h2>
                    <p>目前發電量</p>
                </div>
            </section>

            <!-- System Information -->
            <section class="system-info">
                <div class="info">
                    <h3 id="systemEfficiency"></h3>
                    <p>能源系統效率</p>
                </div>
                <div class="info">
                    <h3 id="co2Reduction"></h3>
                    <p>二氧化碳減少</p>
                </div>
                <div class="info">
                    <h3 id="todayPowerUsed"></h3>
                    <p>今日用電量</p>
                </div>
                <div class="info">
                    <h3 id="nameplateCapacity"></h3>
                    <p>儲存電量</p>
                </div>
            </section>

            <!-- Graph and Image Section -->
            <section class="data-visuals">
                <div class="graph">
                    <h2>今天能源生產圖</h2>
                    <button id="exportButton">匯出到 Excel</button>
                    <canvas id="chart_canvas" width="600" height="200"></canvas>
                </div>
                <div class="solar-img">
                    <img src="../img/solar.webp" alt="Solar Panels" height="300" width="300">
                </div>
            </section>
        </main>
    </div>
</body>

</html>